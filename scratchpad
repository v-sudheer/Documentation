setup 192.168.30.97 -------  AST2500 
ssh pilotadmin@192.168.30.97(password)


1)route add -net 192.168.10.0 netmask 255.255.255.0 gw 192.168.30.254 : any pkt directed to 10.0 should be forwarded to 30.254 
or else
2)
route add -net 192.168.30.0 netmask 255.255.255.0 dev eth1  : any pkt to 30.0 --> will be routed without gw .. i.e it is LAN pkt
route add default gw 192.168.30.254 eth1                    : if a pkt don;t have a dest on LAN, then send it to 30.254, which routes pkt



stty -F /dev/ttyUSB1 -onlcr -echo
scp  vsudheer@192.168.10.10:/tftpboot/ast2500_uart_sdma_evb.mtd  .

minicom /dev/ttyUSB0
setenv ethaddr 00:16:88:01:01:34
dhcp
setenv serverip 192.168.30.97
tftpboot 85000000 ast2500_uart_sdma_evb.mtd
tftp 85000000 ast2500_uart_sdma_evb.mtd
bootm 85080000
stty -F /dev/ttyDMA2 -onlcr -echo
echo "hello" > /dev/ttyDMA2


PCIe HOST2BMC porting:
-----------------------------


code changes related:
----------------------
cd /home/vsudheer/PCIE_host2bmc_App/pcie_device2/bmc/module
source ~/openbmc_ast2500_SDK_deploy/environment-setup-armv6-openbmc-linux-gnueabi
make
meta-aspeed/recipes-kernel/linux/linux-aspeed_git.bb
meta-aspeed/recipes-kernel/linux/linux-aspeed.inc
meta-aspeed/recipes-kernel/linux/ast2500/defconfig
git clone -b ast2600_thud --single-branch    https://github.com/AspeedTech-BMC/openbmc.git
export  TEMPLATECONF=meta-evb/meta-evb-aspeed/meta-evb-ast2600/conf/
. oe-init-build-env
touch conf/sanity.conf
bitbake obmc-phosphor-image


Image building
-------------------
SDK image:
/elx/sandbox/pilot_fw/pilot/sveliseti/code_dir/ast2600_SDK/ast_sdk.v00.05.00

cat README
make ast2600_config
source setenv.sh
make

building only kernel and integrating it to all.bin
---------------------------------------------------
cd kernel/linux
make uImage LOADADDR=0x80008000
make dtbs
cp arch/arm/boot/uImage ../../images/ast2600-default/
cp arch/arm/boot/dts/aspeed-ast2600-evb.dtb ../../images/ast2600-default
cd ../../
make image


VGA Memory Space map to ARM Memory Space (AST2600_v02.pdf: 6.2 ):
bf000 0000 -- bfff ffff : VGA space
select be00 0000 - be10 0000 : host2bmc-1MB (in DT<0xbe000000  0x100000>;)




 HOST2BMC/(PCIe BMC Device)
 ------------------
scp root@192.168.10.130:/tftpboot/ast2600_all.bin /tftpboot/
scp root@192.168.10.130:/tftpboot/dev2bmod.ko /tftpboot/
scp root@192.168.10.130:/tftpboot/dev2bapp /tftpboot/
scp root@192.168.10.130:/tftpboot/function1 /tftpboot/

Sequnce of power ON events:
--------------------------
First switch ON PCI-anlyzer device 
switch ON BMC device  
mw 1e6e2000 0x1688a8a8;mw 1e6e2500 2020; mw 1e6e2c20 0xcA37B; ; mw 1e6e2c24 (md 1e6e2c24 | 40000);
{
mw 1e6e2500 2020   ----> Enable VGA controller	
mw  1e6e2c20 0xc817B   --- Enable HOST2BMC
mw  1e6e2c20 0xc837B   --- Enable BMC MMIO on BMC device.
md 1e6e2c24 --- if all zeros here 
mw 1e6e2c24 (md 1e6e2c24 | 40000 )  --> select INTB
}
switch on PCI-analyzer Card on Host Mother board 
Switch on Host.

picocom -b 115200 -r -l /dev/ttyUSB0
on BMC
-----------
setenv serverip 192.168.30.102
dhcp
tftp 85000000 ast2600_all.bin_be00
bootm 85080000 85600000 85072000

for flashed image 
bootm 20080000 20600000 20072000

ifconfig eth0  192.168.30.98 up
tftp -g 192.168.30.68 -r dev2bapp
tftp -g 192.168.30.102 -r dev2bmod.ko
tftp -g 192.168.30.68 -r function1

tftp -g 192.168.30.68 -r dev2bapp;tftp -g 192.168.30.68 -r dev2bmod.ko;tftp -g 192.168.30.68 -r function1;tftp -g 192.168.30.68  -r bmc_initialise.ko;

insmod dev2bmod.ko
chmod 0777 dev2bapp function1 dev2bmod.ko

cat /proc/devices | grep host2bmc
mknod /dev/pilot_f1 c 246 0





hostside:
-------------
lspci -s 03:01.0 -xxxx

mknod /dev/pilot_f1 c 250 0



Test App:
--------
./pilot_host_app 
// Command definitions
# define    F1_RUN_COMMAND      1
# define    F1_ECHO_TEST        2
# define    F1_FILE_TRANSFER    3
# define    F1_EXIT_F1          255

f1_option g_opts[] = {
    { "-r", execute_on_bmc },
    { "-t", f1_echo_test },
    { "-e", exit_f1 },
//  { "-s", send_file_bmc }
};


Usage: pilotapp [-r|-t|-e] [args]
./pilot_host_app -t "hello"  -- f1_echo_test
./pilot_host_app -r 


Host2BMC understanding:
-------------------------
HOST2BMC_device_enable_routine
{
   Initialise PCI configuration header register 
   Initialise status/control registers 
   initialise membar(BAR0): 
             MEM_BAR register with DDR-sharedmem-size that BMC  exposes to host.
             remap register with DDR-sharedmem-base 
   Initialize msgbar(BAR1):
             program MSG_BAR to request 64KB(0x10000) of memory resources of HOST2BMC(1e7e0000 to 1e7effff)
             
   
   




BMC side script to initialise host2bmc device:
ast#
ast# mw 1E6E2000  0x1688a8a8
ast# mw 1E6E2C20  0xCA37B
ast# mw 1e6e2500  0x2020
ast# mw 1E6E0000  0xfc600309
ast# mw 1E6E0008  0x00440003
ast# mw 1E7E0F10  0xFFF00003
ast# mw 1E7E0F04  0x00000002
ast# mw 1E7E0F18  0xB9000000
ast# mw 1e6e2c20  0xcA37B
ast#

; unlock SCU
sendln 'mw 1E6E2000  0x1688a8a8 
pause 1   

; Program SYSCTRL REGISTER -enable e2l,host2bmc,mmio on host2bmc 
sendln 'mw 1E6E2C20  0xCA37B
pause 1
; Enable VGA
sendln 'mw 1e6e2500  0x2020    
pause 1

; sendln 'md 1E6E0008 04
; unlocking MCR regs
sendln 'mw 1E6E0000  0xfc600309
pause 1
; REQ3=0
sendln 'mw 1E6E0008  0x00440003
pause 1

; Expose 1MB , Enable Memory BAR on Host2BMC Device, Enable Memory BAR on PCIe2PCI Bridge.
sendln 'mw 1E7E0F10  0xFFF00003 
pause 1
;programming for the MEMBAR to be accessible 
sendln 'mw 1E7E0F04  0x00000002 
pause 1
; BAR REMAP: program the remap register for the memory bars. 
sendln 'mw 1E7E0F18  0xB9000000
pause 1
; Enabling INTA(default)
; sendln 'md 1e6e2c24 04
sendln 'mw 1e6e2c20  0xcA37B



root@floydian:/home/pilot/PCIE_host2bmc_App/pcie_device2/host/module# lspci -s 03:01.0 -xxxx
03:01.0 Non-VGA unclassified device: ASPEED Technology, Inc. Device 2402
00: 03 1a 02 24 03 00 10 02 00 00 00 00 00 00 00 00
10: 00 00 0a fa 00 00 00 fa 00 00 00 00 00 00 00 00
20: 00 00 00 00 00 00 00 00 00 00 00 00 03 1a 50 11
30: 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00
40: 01 00 c3 ff 00 00 00 00 00 00 00 00 00 00 00 00
50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00



host2bmc-q1 --  md 0x1E7EA000
host2bmc-q2 --  md 0x1E7EA010
host2bmc-q-status : md 0x1E7EA044

bmc2host-q1 --  md 0x1E7EA020
bmc2host-q2 --  md 0x1E7EA030
bmc2host-q-status : md 0x1E7EA040

bmc2host-q1-test:
-----------------------
md 0x1E7EA020 - till queue is cleared 
md 0x1E7EA040 
set bit23 - Q1 FULL MASK
set bit30 - ENABLE b2h INTB
set bit31 - Door bell
door bell test:
mw 0x1e7ea040 0x40800000  (0x4#8# ####)
mw 0x1e7ea040 0xc0800000  (0x8#8# ####)
check for ISR triggered on host
Queue fill test
mw 0x1e7ea040  0x40800000 (0x4#8# ####)
mw 0x1E7EA020 0xFFFFAAA1
mw 0x1E7EA020 0xFFFFAAA2
mw 0x1E7EA020 0xFFFFAAA3
mw 0x1E7EA020 0xFFFFAAA4
mw 0x1E7EA020 0xFFFFAAA5
check for ISR triggered on host











#######################################################################################################





[AST /]$ insmod  dev2bmod_old.ko
[  122.162558] dev2bmod: loading out-of-tree module taints kernel.
[  122.169871] Entered pilot_func1_init
[  122.174000] Initializing pilot4 device 2 module version 0.0.9
[  122.180505] ------------[ cut here ]------------
[  122.185710] WARNING: CPU: 1 PID: 782 at arch/arm/mm/ioremap.c:303 __arm_ioremap_pfn_caller+0xe8/0x1c4
[  122.196096] Modules linked in: dev2bmod(O+)
[  122.200814] CPU: 1 PID: 782 Comm: insmod Tainted: G           O      5.1.3-00047-g57fa428-dirty #1
[  122.210882] Hardware name: Generic DT based system
[  122.216263] Backtrace:
[  122.219017] [<8010eed8>] (dump_backtrace) from [<8010f15c>] (show_stack+0x20/0x24)
[  122.227529]  r7:0000012f r6:600b0013 r5:00000000 r4:80b525a4
[  122.233893] [<8010f13c>] (show_stack) from [<8073ac10>] (dump_stack+0x90/0xa4)
[  122.242015] [<8073ab80>] (dump_stack) from [<80121964>] (__warn.part.3+0xcc/0xe8)
[  122.250425]  r7:0000012f r6:00000009 r5:00000000 r4:00000000
[  122.256788] [<80121898>] (__warn.part.3) from [<80121b00>] (warn_slowpath_null+0x54/0x5c)
[  122.265981]  r7:000bf000 r6:80118e94 r5:0000012f r4:808d2780
[  122.272344] [<80121aac>] (warn_slowpath_null) from [<80118e94>] (__arm_ioremap_pfn_caller+0xe8/0x1c4)
[  122.282708]  r6:bf000000 r5:00000000 r4:01000000
[  122.287899] [<80118dac>] (__arm_ioremap_pfn_caller) from [<80118fc4>] (__arm_ioremap_caller+0x54/0x5c)
[  122.298364]  r10:bf367f28 r9:80b09c48 r8:7f0022c0 r7:00000000 r6:7f002000 r5:7f0007d4
[  122.307162]  r4:80118f70 r3:00000000
[  122.311179] [<80118f70>] (__arm_ioremap_caller) from [<80119020>] (ioremap+0x2c/0x30)
[  122.319994] [<80118ff4>] (ioremap) from [<7f000884>] (pilot_func1_init+0xb0/0x318 [dev2bmod])
[  122.329566]  r5:7f0007d4 r4:bf000000
[  122.333589] [<7f0007d4>] (pilot_func1_init [dev2bmod]) from [<8010301c>] (do_one_initcall+0x50/0x21c)
[  122.343956]  r10:bf367f28 r9:80b09c48 r8:7f0020c0 r7:00000000 r6:80b09c48 r5:7f0007d4
[  122.352754]  r4:7f0020c0
[  122.355603] [<80102fcc>] (do_one_initcall) from [<801b0c28>] (do_init_module+0x70/0x240)
[  122.364698]  r8:7f0020c0 r7:b68d3ac0 r6:b68d3580 r5:00000002 r4:7f0020c0
[  122.372234] [<801b0bb8>] (do_init_module) from [<801b2f80>] (load_module+0x20bc/0x274c)
[  122.381231]  r7:b68d3ac0 r6:b68d3a80 r5:00000002 r4:00000002
[  122.387594] [<801b0ec4>] (load_module) from [<801b37b4>] (sys_init_module+0x1a4/0x1dc)
[  122.396497]  r10:01b2e150 r9:ffffe000 r8:80b09c48 r7:01b3df64 r6:00000000 r5:c41aae04
[  122.405295]  r4:0000fe04
[  122.408133] [<801b3610>] (sys_init_module) from [<80101000>] (ret_fast_syscall+0x0/0x54)
[  122.417225] Exception stack(0xbf367fa8 to 0xbf367ff0)
[  122.422904] 7fa0:                   0000fe04 7e89ff13 01b2e160 0000fe04 01b2e150 7e89ff13
[  122.432098] 7fc0: 0000fe04 7e89ff13 00000002 00000080 7e89fe24 0000007c 76f7b000 00000000
[  122.441290] 7fe0: 7e89fc60 7e89fc50 0002e754 76e6a7c0
[  122.446967]  r10:00000080 r9:bf366000 r8:80101204 r7:00000080 r6:00000002 r5:7e89ff13
[  122.455766]  r4:0000fe04
[  122.458705] ---[ end trace d2b9d09104dacfc1 ]---
[  122.463900] ioremap_nocache failed.
insmod: can't insert 'dev2bmod_old.ko': Operation not permitted
[AST /]$ [  288.755424] random: crng init done



















host2bmc Stress testing:
-------------------------

git clone http://192.168.10.30:7990/scm/bmckvms/ast2600_pcie_interface_tests


cd ~/host2bmc_fresh/ast_sdk.v00.05.03
vim ast2600_pcie_interface_tests/host2bmc/pcie_device2/aspeed-g6.dtsi
/home/vsudheer/host2bmc_fresh/ast_sdk.v00.05.03/kernel/linux/arch/arm/boot/dts/aspeed-g6.dtsi
host2bmc: host2bmc@1e7e0000 {
                                compatible = "aspeed,ast2600-host2bmc";
                                reg = <0x1e7e0000 0xffff>,<0xb9000000 0x100000>;
                                interrupts = <GIC_SPI 99 IRQ_TYPE_LEVEL_HIGH>;
                                status = "disabled";
                        };

vim  ast2600_pcie_interface_tests/host2bmc/pcie_device2/aspeed-ast2600-evb.dts
/home/vsudheer/host2bmc_fresh/ast_sdk.v00.05.03/kernel/linux/arch/arm/boot/dts/aspeed-ast2600-evb.dts
&host2bmc {
        status = "okay";
};




Step 1: make ast2600_config
Step 2: source setenv.sh
Step 3: make

cd /home/vsudheer/host2bmc_fresh/ast_sdk.v00.05.03
outputs/ast2600-default/kernel/include/generated/utsrelease.h ---> 
#define UTS_RELEASE "5.1.3" ----------> #define UTS_RELEASE "5.1.3.sdk-v00.05.03"






